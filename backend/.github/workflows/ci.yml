name: Full-Stack CI Pipeline

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:

jobs:
  # Backend
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm test

  # Frontend
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm test
      - run: npm run build

  # SAST - GitHub CodeQL
  codeql:
    runs-on: ubuntu-latest
    steps:
      - uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - uses: github/codeql-action/analyze@v2

  # Secret scanning - Gitleaks
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Gitleaks
        uses: zricethezav/gitleaks-action@v2

  # Container scanning - Trivy
  trivy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Docker
        run: sudo apt-get install -y docker.io
      - name: Build backend Docker image
        run: docker build -t backend ./backend
      - name: Scan backend image
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          ./trivy image backend
      - name: Build frontend Docker image
        run: docker build -t frontend ./frontend
      - name: Scan frontend image
        run: ./trivy image frontend

  # DAST - OWASP ZAP (stub)
  dast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run OWASP ZAP scan
        run: |
          echo "DAST placeholder - run ZAP scan against staging URL"
